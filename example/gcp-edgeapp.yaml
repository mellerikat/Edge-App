# gcp-edgeapp.yaml
env:
  type: gcp
  cluster: edgeapp-cluster
  edgeapp_node: edgeapp # autopilot 일 경우 빈 공간
  alo_node: alo # autopilot 일 경우 빈 공간
  alo_memory: 6500Mi
  storage: cloud-storage-dev-meerkat
  controller_image_address: 339713051385.dkr.ecr.ap-northeast-2.amazonaws.com/mellerikat/release/edge-app/amd/controller:3.6.0-rc.1
  iomanager_image_address: 339713051385.dkr.ecr.ap-northeast-2.amazonaws.com/mellerikat/release/edge-app/amd/iomanager:3.6.0-rc.1
  redis_image_address: 339713051385.dkr.ecr.ap-northeast-2.amazonaws.com/mellerikat/release/edge-app/amd/redis:v7.2.3
  namespace: gke-edge-app
  serviceaccount: gke-edge-app

ecr:
  token_renewable: true
  image_host: https://339713051385.dkr.ecr.ap-northeast-2.amazonaws.com

pv:
  pv_enable: False

conductor:
  host: edgecond.mellerikat-dev.com
  http_protocol: https
  port: 443
  wsprotocol: wss

appinfo:
  data_input_path: gcp_test/input/
  data_ouput_path: gcp_test/output/
  data_input_policy: copy #'move','copy'
  data_save_policy: add_utc #'overwrite','add_utc','add_date'
  enable_result_to_edgecond: False
  Note: gcp-edgeapp-test
  ecr_token_enable: True

cronjob:
  suspend: false
  base_image: asia-northeast3-docker.pkg.dev/nimble-sight-450802-a0/gcr-edgeapp-test/alpine/k8s:1.30.12
  onSchedule: "50 23 12 4 *"
  offSchedule: "50 23 12 4 *"
  api_server_endpoint: https://gke-0946312b10ff47d3b475dd58c21971d22d83-684332823146.asia-northeast2.gke.goog # DNS endpoint
  gcp_project_id: "nimble-sight-450802-a0"
  gcp_region: "asia-northeast3-c"
  gcp_aws_role: arn:aws:iam::339713051385:role/role-gke-an3-auditdx-dev-gke-edge-app-sa
  edgeapp_cronjob_ecr_secret: edgeapp-cronjob-ecr-secret-helm
  enable_k8s_api_server_cert: true
  ecr_token_command: |
    curl -k -X POST https://kubernetes.default.svc/api/v1/namespaces/{namespace}/serviceaccounts/{serviceaccount}/token \
            -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
            -H "Content-Type: application/json" \
            --data '{"apiVersion": "authentication.k8s.io/v1", "kind": "TokenRequest", "spec": { "audiences": ["sts.amazonaws.com"], "expirationSeconds": 3600 }}' \
            --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
            > /home/response.json && \
          token=$(grep -o '"token": *"[^"]*"' /home/response.json | sed 's/"token": *"//g' | sed 's/"//g') && \
          echo "$token" > /home/token && \
          ECR_TOKEN="$(aws ecr get-login-password --region ${AWS_REGION})" && \
          kubectl delete secret --ignore-not-found {edgeapp_cronjob_ecr_secret} -n {namespace} && \
          kubectl create secret docker-registry {edgeapp_cronjob_ecr_secret} --docker-server={image_host} --docker-username=AWS --docker-password=${ECR_TOKEN} --namespace={namespace}
